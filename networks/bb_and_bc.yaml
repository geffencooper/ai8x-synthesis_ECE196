arch: mini_vgg_net_bb_and_bc
dataset: bb

# Define layer parameters in order of the layer sequence
layers:
- pad: 1 # 1x80x80 --> 8x80x80        conv1
  activate: ReLU
  out_offset: 0x0
  processors: 0x0000000000000001
  data_format: CHW
  op: conv2d
- pad: 1 # 8x80x80 --> 8x80x80        conv2
  activate: ReLU
  out_offset: 0x0
  processors: 0x0000000000000ff0
  op: conv2d
- pad: 1 # 8x80x80 --> 16x40x40       conv3
  activate: ReLU
  out_offset: 0x0
  processors: 0x00000000000ff000
  max_pool: 2 
  pool_stride: 2
  op: conv2d
- pad: 1 # 16x40x40 --> 16x40x40      conv4
  activate: ReLU
  out_offset: 0x0
  processors: 0x000000ffff000000
  op: conv2d
- pad: 1 # 16x40x40 --> 32x20x20      conv5
  activate: ReLU
  out_offset: 0x2000
  processors: 0x000000000000ffff
  max_pool: 2 
  pool_stride: 2
  op: conv2d
- pad: 1 # 32x20x20 --> 32x20x20      conv6
  activate: ReLU
  out_offset: 0x0
  processors: 0x00000000ffffffff
  op: conv2d
- pad: 2 # 32x20x20 --> 64x12x12      conv7
  activate: ReLU
  out_offset: 0x2000
  processors: 0x00000000ffffffff
  max_pool: 2 
  pool_stride: 2
  op: conv2d
- pad: 1 # 64x12x12 --> 64x12x12      conv8
  activate: ReLU
  out_offset: 0x0
  processors: 0xffffffffffffffff
  op: conv2d
- pad: 1 # 64x12x12 --> 64x6x6       conv9
  activate: ReLU
  out_offset: 0x2000
  processors: 0xffffffffffffffff
  max_pool: 2 
  pool_stride: 2
  op: conv2d
- pad: 1 # 64x6x6 --> 64x3x3       conv10
  activate: ReLU
  out_offset: 0x0
  processors: 0xffffffffffffffff
  max_pool: 2 
  pool_stride: 2
  op: conv2d

- op: mlp # 64x3x3 --> 1x576 --> 1x10  fc1
  flatten: true
  out_offset: 0x2000
  processors: 0xffffffffffffffff
- op: mlp # 1x10 --> 1x2                fc2 binary classifier output
  flatten: true
  out_offset: 0x4000
  output_width: 32
  processors: 0x3ff0000000000000

  # this layer should get its input from conv10 as specified by in_sequences
- op: mlp # 64x3x3 --> --> 1x2          fc3 bounding box output
  in_sequences: 10
  in_offset: 0x0
  flatten: true
  out_offset: 0x6000
  output_width: 32
  processors: 0xffffffffffffffff
